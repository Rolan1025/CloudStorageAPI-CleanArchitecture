{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Compilador de Microsoft (R) Visual C#",
        "version": "4.13.0.0",
        "fileVersion": "4.13.0-3.25072.11 (40a6eabe)",
        "semanticVersion": "4.13.0",
        "language": "es-ES"
      },
      "results": [
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "El elemento campo \"_tokenInfoMock\" que no acepta valores NULL debe contener un valor distinto de NULL al salir del constructor. Considere la posibilidad de agregar el modificador \"required'\"o declarar el campo como un valor que acepta valores NULL.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/armad/Documentos/Estudio/Proyectos/infobitservicebackend/tests/Application.UnitTests/Common/Behaviours/AuthorizationBehaviourTests.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 34,
                  "endLine": 17,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/armad/Documentos/Estudio/Proyectos/infobitservicebackend/tests/Application.UnitTests/Common/Behaviours/AuthorizationBehaviourTests.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 34,
                  "endLine": 17,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "El elemento campo \"_nextMock\" que no acepta valores NULL debe contener un valor distinto de NULL al salir del constructor. Considere la posibilidad de agregar el modificador \"required'\"o declarar el campo como un valor que acepta valores NULL.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/armad/Documentos/Estudio/Proyectos/infobitservicebackend/tests/Application.UnitTests/Common/Behaviours/AuthorizationBehaviourTests.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 54,
                  "endLine": 18,
                  "endColumn": 63
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/armad/Documentos/Estudio/Proyectos/infobitservicebackend/tests/Application.UnitTests/Common/Behaviours/AuthorizationBehaviourTests.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 54,
                  "endLine": 18,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "El elemento campo \"_authorizedBehaviour\" que no acepta valores NULL debe contener un valor distinto de NULL al salir del constructor. Considere la posibilidad de agregar el modificador \"required'\"o declarar el campo como un valor que acepta valores NULL.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/armad/Documentos/Estudio/Proyectos/infobitservicebackend/tests/Application.UnitTests/Common/Behaviours/AuthorizationBehaviourTests.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 67,
                  "endLine": 19,
                  "endColumn": 87
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/armad/Documentos/Estudio/Proyectos/infobitservicebackend/tests/Application.UnitTests/Common/Behaviours/AuthorizationBehaviourTests.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 67,
                  "endLine": 19,
                  "endColumn": 87
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "El elemento campo \"_unauthorizedBehaviour\" que no acepta valores NULL debe contener un valor distinto de NULL al salir del constructor. Considere la posibilidad de agregar el modificador \"required'\"o declarar el campo como un valor que acepta valores NULL.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/armad/Documentos/Estudio/Proyectos/infobitservicebackend/tests/Application.UnitTests/Common/Behaviours/AuthorizationBehaviourTests.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 69,
                  "endLine": 20,
                  "endColumn": 91
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/armad/Documentos/Estudio/Proyectos/infobitservicebackend/tests/Application.UnitTests/Common/Behaviours/AuthorizationBehaviourTests.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 69,
                  "endLine": 20,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "El elemento campo \"_multipleAuthorizeBehaviour\" que no acepta valores NULL debe contener un valor distinto de NULL al salir del constructor. Considere la posibilidad de agregar el modificador \"required'\"o declarar el campo como un valor que acepta valores NULL.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/armad/Documentos/Estudio/Proyectos/infobitservicebackend/tests/Application.UnitTests/Common/Behaviours/AuthorizationBehaviourTests.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 74,
                  "endLine": 21,
                  "endColumn": 101
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/armad/Documentos/Estudio/Proyectos/infobitservicebackend/tests/Application.UnitTests/Common/Behaviours/AuthorizationBehaviourTests.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 74,
                  "endLine": 21,
                  "endColumn": 101
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/armad/Documentos/Estudio/Proyectos/infobitservicebackend/tests/Application.UnitTests/Common/Mappings/MappingTests.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 17,
                  "endLine": 34,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "NUnit2045",
          "level": "note",
          "message": "Call independent Assert statements from inside an Assert.Multiple",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/armad/Documentos/Estudio/Proyectos/infobitservicebackend/tests/Application.UnitTests/Common/Mappings/MappingTests.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 9,
                  "endLine": 67,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "SupportsEnterMultipleScope": "EnterMultipleScope"
            }
          }
        },
        {
          "ruleId": "NUnit2046",
          "level": "note",
          "message": "Use Assert.That(<collection>, Has.Count.EqualTo(<value>)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/armad/Documentos/Estudio/Proyectos/infobitservicebackend/tests/Application.UnitTests/Common/Mappings/MappingTests.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 21,
                  "endLine": 67,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "El miembro \"GetInstanceOf\" no tiene acceso a los datos de la instancia y se puede marcar como static.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/armad/Documentos/Estudio/Proyectos/infobitservicebackend/tests/Application.UnitTests/Common/Mappings/MappingTests.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 20,
                  "endLine": 73,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1861",
          "level": "note",
          "message": "Preferir campos \"static readonly\" frente a argumentos de matriz constantes si se llama repetidamente al método llamado y no muta la matriz pasada",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/armad/Documentos/Estudio/Proyectos/infobitservicebackend/tests/Application.UnitTests/Common/Mappings/MappingExtensionsTests.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 53,
                  "endLine": 62,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "paramName": "expected"
            }
          }
        },
        {
          "ruleId": "CA1859",
          "level": "note",
          "message": "Cambiar el tipo de campo '_configuration' de 'AutoMapper.IConfigurationProvider' a 'AutoMapper.MapperConfiguration' para mejorar el rendimiento",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/armad/Documentos/Estudio/Proyectos/infobitservicebackend/tests/Application.UnitTests/Common/Mappings/MappingTests.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Marcar miembros como static",
          "fullDescription": "Los miembros que no tienen acceso a datos de instancia o que llaman a métodos de instancia se pueden marcar como static. Después de marcar los métodos como static, el compilador emitirá los sitios de llamada no virtuales para estos miembros. Esto puede proporcionar una mejora apreciable del rendimiento del código sensible al rendimiento.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1859": {
          "id": "CA1859",
          "shortDescription": "Usar tipos concretos cuando sea posible para mejorar el rendimiento",
          "fullDescription": "El uso de tipos concretos evita la sobrecarga de llamadas virtuales o de interfaz y habilita la inserción.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1859",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1861": {
          "id": "CA1861",
          "shortDescription": "Evitar matrices constantes como argumentos",
          "fullDescription": "Las matrices constantes pasadas como argumentos no se reutilizan cuando se llaman repetidamente, lo que implica que se cree una nueva matriz cada vez. Considere la posibilidad de extraerlas a campos \"static readonly\" para mejorar el rendimiento si la matriz pasada no se muta dentro del método llamado.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1861",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "Un campo que no acepta valores NULL debe contener un valor distinto de NULL al salir del constructor. Considere la posibilidad de agregar el modificador \"required\" o declararlo como un valor que acepta valores NULL.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "NUnit2045": {
          "id": "NUnit2045",
          "shortDescription": "Use Assert.Multiple",
          "fullDescription": "Hosting Asserts inside an Assert.Multiple allows detecting more than one failure.",
          "defaultLevel": "note",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2045.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        },
        "NUnit2046": {
          "id": "NUnit2046",
          "shortDescription": "Use CollectionConstraint for better assertion messages in case of failure",
          "fullDescription": "Use Has.Length/Has.Count/Is.Empty instead of testing property directly.",
          "defaultLevel": "note",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2046.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        },
        "S2699": {
          "id": "S2699",
          "shortDescription": "Tests should include assertions",
          "fullDescription": "The rule targets test methods that lack an assertion and consist solely of an action and, optionally, a setup.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2699",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}